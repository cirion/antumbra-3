triggers {
  name: "Map Started"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Waypoint on Actor"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "537506f86434316b1333362f"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537537f46434316b1333367b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Tir Arrives"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isTirArrived"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Set Team Alliance"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TeamAlliance"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Clear Actor Orders"
      args {
        call_value {
          functionName: "All Actors"
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Clear ThreatList"
      args {
        call_value {
          functionName: "All Actors"
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
    }
    ops {
      functionName: "Set Waypoint on Prop"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PrimaryOrSecondary"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "521c17f8366236581b006c62"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Keep at least one decker on your team alive."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "537506f86434316b1333362f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "537506f86434316b1333362f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Leave Eclipse."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Find proof of your innocence in the Matrix."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53751f896434316b1333363f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Tir Floor 3a"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor3Tir"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751c666434316b13333638"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53751ceb6434316b1333363e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Tir Floor 3b"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor3Tir"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751c836434316b1333363b"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53751ffc6434316b13333640"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Tir Floor 2a"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor2Tir"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751c956434316b1333363d"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520216434316b13333641"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Tir Floor 2b"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor2Tir"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751c6c6434316b13333639"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520336434316b13333642"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Tir Floor 1a"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor1Tir"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751c8a6434316b1333363c"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520406434316b13333643"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Tir Floor 1b"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor1Tir"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751c7b6434316b1333363a"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520576434316b13333644"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Marine Floor 3a"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor3Marine"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751b626434316b13333635"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520b76434316b13333645"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Marine Floor 3b"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor3Marine"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53750dd26434316b13333634"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520b76434316b13333646"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Marine Floor 2a"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor2Marine"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53750d896434316b13333633"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520b76434316b13333647"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Marine Floor 2b"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor2Marine"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751b866434316b13333636"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520b76434316b13333648"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Marine Floor 1a"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor1Marine"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53751c8a6434316b1333363c"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520b76434316b13333649"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Spawn Marine Floor 1b"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Count of Alive Actors"
          args {
            call_value {
              functionName: "All Actors With Tag"
              args {
                call_value {
                  functionName: "Get Map Item (SenseTagList)"
                  args {
                    string_value: "isFloor1Marine"
                  }
                }
              }
              args {
                call_value {
                  functionName: "Get Preset Value (int)"
                  args {
                    string_value: "AllOrAny"
                  }
                  args {
                    int_value: 0
                  }
                }
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "maxGuardsPerFloor"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (float)"
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 0
          }
          args {
            float_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        float_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "53750d896434316b13333633"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537520b76434316b1333364a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Check for any living PC deckers"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Team Has Cyberdeck"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "HasOrHasNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isTirArrived"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Keep at least one decker on your team alive."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537521ad6434316b1333364b"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Approach Kali"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "537535796434316b13333652"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "537100b7643431b120cd3a3d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "537506f86434316b1333362f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Clear Waypoint from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "537506f86434316b1333362f"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Find Kali."
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537535af6434316b13333653"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Start Decking Phase"
  events {
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "isHackingAvailable"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "537506f86434316b1333362f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "537506f86434316b1333362f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537535c06434316b13333654"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "Camera 1st Floor"
  position {
    x: -36
    y: 12
    width: 51
    height: 50
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5375060b6434316b1333362c"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Camera 2nd Floor"
  position {
    x: -39
    y: 105
    width: -45
    height: -44
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "537506206434316b1333362d"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Camera 3rd Floor"
  position {
    x: -88
    y: 155
    width: -45
    height: -44
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "537506266434316b1333362e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Stairs Floor 1 to 2"
  position {
    x: -28
    y: 39
    width: 1
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "53752ea66434316b1333364e"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Stairs Floor 2 to 1"
  position {
    x: -42
    y: 76
    width: 1
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "53752ecc6434316b1333364f"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Elevator Floor 2 to 3"
  position {
    x: -78
    y: 89
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "53752ee36434316b13333650"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Elevator Floor 3 to 2"
  position {
    x: -126
    y: 137
    width: 1
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "53752ef46434316b13333651"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Kali Proximity"
  position {
    x: -106
    y: 118
    width: 12
    height: 10
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "537535796434316b13333652"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -102
    y: 0
    z: 120
  }
  orientation: ORIENTATION_E
  displayName: "Kali"
  idRef {
    id: "537506f86434316b1333362f"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "5227dbe6366236a0180066d7"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanFemale"
    character_sheet_id: "Thug_Lv5_Melee"
    character_mod {
      stats {
        body: 1
        quickness: 0
        strength: 0
        charisma: 1
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 10
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: -4
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 2
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 4
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: -4
        unarmed: 4
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "AdeptCombatvest"
    }
    equipment {
      prefab_name: "Berlin_Killing Hands"
    }
    equipment {
      prefab_name: "Berlin_Stride"
    }
    equipment {
      prefab_name: "Berlin_Magic Resistance 1"
    }
    equipment {
      prefab_name: "Berlin_Mana Fist"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    team_id: "Civilians"
    char_name: "Kali"
    pc_spawn_number: -1
    ai_ignores: false
    uninjurable: false
    unkillable: true
    portrait {
      filename: "pc_humanfemale_04c_whitebob"
    }
    portrait_code_override: "s6h5c14"
    karma: 144
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -127
    y: 0
    z: 118
  }
  orientation: ORIENTATION_S
  displayName: "DJ Omphalos"
  idRef {
    id: "537507086434316b13333630"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "5370ff79643431b120cd39f7"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "DJ Omphalos"
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_03a_magebraids"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -129
    y: 0
    z: 93
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor1Marine"
  GeneralTags: ""
  displayName: "Floor 1 Marine Captain Spawner"
  idRef {
    id: "53750d526434316b13333632"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/HumanMaleExecSecurity"
    character_sheet_id: "Lonestar_Lv1_Captain"
    equipment_sheet_id: "Lonestar_Lv1_Captain_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Marines"
    char_name: "Marine"
    GeneralTags: "isFloor1Marine"
    GeneralTags: ""
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 44
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -129
    y: 0
    z: 95
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor1Marine"
  GeneralTags: ""
  displayName: "Floor 1 Marine Pistol Spawner"
  idRef {
    id: "53750d896434316b13333633"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/HumanMaleSecurity"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    equipment_sheet_id: "Lonestar_Lv1_Pistol_Gear"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Marines"
    char_name: "Marine"
    GeneralTags: "isFloor1Marine"
    GeneralTags: ""
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 30
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -136
    y: 0
    z: 92
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor3Marine"
  GeneralTags: ""
  displayName: "Floor 3 Marine Mage Spawner"
  idRef {
    id: "53750dd26434316b13333634"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/HumanMaleSecurity"
    character_sheet_id: "Lonestar_Lv1_Human_Mage"
    equipment_sheet_id: "Lonestar_Lv1_Mage_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Marines"
    char_name: "Marine Mage"
    GeneralTags: "isFloor3Marine"
    GeneralTags: ""
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 40
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -136
    y: 0
    z: 94
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor3Marine"
  GeneralTags: ""
  displayName: "Floor 3 SMG Spawner"
  idRef {
    id: "53751b626434316b13333635"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/HumanMaleExecSecurity"
    character_sheet_id: "Lonestar_Lv1_Heavy_SMG"
    equipment_sheet_id: "Lonestar_Lv1_SMG_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Marines"
    char_name: "Marine"
    GeneralTags: "isFloor3Marine"
    GeneralTags: ""
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 39
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -133
    y: 0
    z: 92
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor2Marine"
  GeneralTags: ""
  displayName: "Floor 2 Shotgun Spawner"
  idRef {
    id: "53751b866434316b13333636"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/HumanFemaleSecurity"
    character_sheet_id: "Lonestar_Lv1_Ork_Shotgun"
    equipment_sheet_id: "Lonestar_Lv1_Shotgun_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "LoneStar"
    char_name: "Marine"
    GeneralTags: "isFloor2Marine"
    GeneralTags: ""
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 33
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -133
    y: 0
    z: 94
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor2Marine"
  GeneralTags: ""
  displayName: "Floor 2 Mage Spawner"
  idRef {
    id: "53751b9e6434316b13333637"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Security/HumanMaleSecurityNVG"
    character_sheet_id: "Lonestar_Lv1_Human_Mage"
    equipment_sheet_id: "Lonestar_Lv1_Mage_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Marines"
    char_name: "Marine Mage"
    GeneralTags: "isFloor2Marine"
    GeneralTags: ""
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 40
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -135
    y: 0
    z: 86
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor3Tir"
  displayName: "Floor 3 Tir Melee Spawner"
  idRef {
    id: "53751c666434316b13333638"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/ElfMaleBerlinGanger"
    character_sheet_id: "Generic_Lv1_Human_Melee"
    equipment_sheet_id: "Generic_Lv1_Melee_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Tir"
    char_name: "Tir Commando"
    GeneralTags: "isFloor3Tir"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 28
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -133
    y: 0
    z: 86
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor2Tir"
  displayName: "Floor 2 Tir Melee Spawner"
  idRef {
    id: "53751c6c6434316b13333639"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/ElfMaleGangerEyepatch"
    character_sheet_id: "Generic_Lv1_Human_Melee"
    equipment_sheet_id: "Generic_Lv1_Melee_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Tir"
    char_name: "Tir Commando"
    GeneralTags: "isFloor2Tir"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 28
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -131
    y: 0
    z: 86
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor1Tir"
  displayName: "Floor 1 Tir Mage Spawner"
  idRef {
    id: "53751c7b6434316b1333363a"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/ElfMaleGanger"
    character_sheet_id: "Lonestar_Lv1_Human_Mage"
    equipment_sheet_id: "Lonestar_Lv1_Mage_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Tir"
    char_name: "Tir Mage"
    GeneralTags: "isFloor1Tir"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 40
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -135
    y: 0
    z: 87
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor3Tir"
  displayName: "Floor 3 Tir Pistol Spawner"
  idRef {
    id: "53751c836434316b1333363b"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Gangers/ElfFemaleBerlinGanger"
    character_sheet_id: "Lonestar_Lv1_Human_Pistol"
    equipment_sheet_id: "Lonestar_Lv1_Pistol_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Tir"
    char_name: "Tir Commando"
    GeneralTags: "isFloor3Tir"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 30
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -131
    y: 0
    z: 87
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor1Tir"
  displayName: "Floor 1 Tir SMG Spawner"
  idRef {
    id: "53751c8a6434316b1333363c"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Standard/ElfFemaleStreetSamurai"
    character_sheet_id: "Lonestar_Lv1_Heavy_SMG"
    equipment_sheet_id: "Lonestar_Lv1_SMG_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Tir"
    char_name: "Tir Commando"
    GeneralTags: "isFloor1Tir"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 39
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -133
    y: 0
    z: 87
  }
  orientation: ORIENTATION_S
  GeneralTags: "isFloor2Tir"
  displayName: "Floor 2 Tir Captain Spawner"
  idRef {
    id: "53751c956434316b1333363d"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/ElfFemaleGangerMohawk"
    character_sheet_id: "Lonestar_Lv1_Captain"
    equipment_sheet_id: "Lonestar_Lv1_Captain_Gear"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
      vulnerabilities {
      }
    }
    team_id: "Tir"
    char_name: "Tir Commando"
    GeneralTags: "isFloor2Tir"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 44
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isTirArrived"
    typeName: "bool"
  }
}
variables {
  int_value: 4
  variableref_value {
    scope: TsVariableScope_Scene
    name: "maxGuardsPerFloor"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "isHackingAvailable"
    typeName: "bool"
  }
}
goals {
  name: "Keep at least one decker on your team alive."
  type: GoalType_Primary
  status: GoalStatus_Success
}
goals {
  name: "Leave Eclipse."
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Find proof of your innocence in the Matrix."
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Find Kali."
  type: GoalType_Primary
  status: GoalStatus_Started
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "Eclipse"
parentStory: ""
scene_title: "Eclipse"
scene_subtitle: ""
scene_synopsis: "Eclipse is the hottest entertainment complex in San Francisco, but nobody feels like dancing tonight. The Imperial Marines have swarmed inside, seizing all assets and holding hostages in a high-stakes stand-off with Kali, the head of Antumbra Enterprises. This will end in bloodshed."
scene_image: ""
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Tir"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 1
}
team_affiliations {
  team_name: "Marines"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Kali"
  affiliation: 0
  affiliation: 1
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
can_move_outside_camera_regions: true
can_start_before_triggers: true
