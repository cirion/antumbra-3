triggers {
  name: "Kill Dorbi"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "531d26a736623648180018bf"
              }
              args {
                string_value: "isDorbiRecruited"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "isDorbiDead"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "536b0cf7366236e0040077d2"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536b1400366236e0040077d6"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Kill Norton"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "531d26a736623648180018bf"
              }
              args {
                string_value: "isNortonRecruited"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "isNortonDead"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "536b0d3a366236e0040077d5"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536b1441366236e0040077d7"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Kill Bummer"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "531d26a736623648180018bf"
              }
              args {
                string_value: "isBummerRecruited"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "isBummerDead"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "536b0d3a366236e0040077d4"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536b1457366236e0040077d8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Kill Hailey"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "531d26a736623648180018bf"
              }
              args {
                string_value: "isHaileyRecruited"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "isHaileyDead"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "536b159a366236e0040077df"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536b15d5366236e0040077e0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Kill Elorn"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Comparison (bool)"
          args {
            call_value {
              functionName: "Get Story Variable (bool)"
              args {
                string_value: "531d26a736623648180018bf"
              }
              args {
                string_value: "isElornRecruited"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "IsOrIsNot"
              }
              args {
                int_value: 1
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "bool"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "isElornDead"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Kill Actor"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "536c40ed366236d41e0026a7"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "DeathMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537d6b32366236a41f000371"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Set Animations"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "536b159a366236e0040077df"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "repairing"
          }
          args {
            string_value: "repairing"
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "536b0d3a366236e0040077d5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "poised"
          }
          args {
            string_value: "poised"
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Wander Range"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWanderer"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        int_value: 5
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "536b0cf7366236e0040077d2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "btltweaking"
          }
          args {
            string_value: "btltweaking"
          }
        }
      }
    }
    ops {
      functionName: "Set Actor In Passive Mode"
      args {
        call_value {
          functionName: "All Actors on Team"
          args {
            call_value {
              functionName: "Get Preset Value (string)"
              args {
                string_value: "FactionList"
              }
              args {
                int_value: 3
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
          args {
            call_value {
              functionName: "Get Map Item (SceneDimension)"
              args {
                string_value: "Default"
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Run Speed"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWanderer"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "End Current Team Round"
    }
  }
  isActive: true
  idRef {
    id: "536c5de5366236d41e0027ee"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Use Computer"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "536c5f37366236d41e0027f0"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "536bee59643431b502b69ee2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "536b159a366236e0040077dd"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536c5f42366236d41e0027f1"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Explode Barrel"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Barrel Explode Loop"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Play FX at Point"
      args {
        string_value: "EnvironmentExplosion"
      }
      args {
        call_value {
          functionName: "Current Location of Prop"
          args {
            call_value {
              functionName: "Get Map Item (Prop)"
              args {
                string_value: "536d9091366236081a002945"
              }
            }
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536d9042366236081a002943"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Hear Explosion"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Barrel Explode Loop"
      }
    }
  }
  conditions {
    ops {
      functionName: "Evaluate If Actor is Inside Region"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "AreOrAreNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "536d9131366236081a002947"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "spellcasting"
          }
          args {
            string_value: "FireboltExplosion"
          }
        }
      }
      args {
        float_value: 0.5
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536d9128366236081a002946"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Explode Barrel Loop"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "Barrel Explode Loop"
      }
    }
  }
  conditions {
    ops {
      functionName: "Invert Bool"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "talkingToDorbi"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Barrel Explode Loop"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (float)"
          args {
            float_value: 5
          }
          args {
            float_value: 15
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536d997a366236081a002948"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "Start Explode Barrel Loop"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "isDorbiRecruited"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "isDorbiDead"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Send Event After Delay"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "Barrel Explode Loop"
          }
        }
      }
      args {
        float_value: 8
      }
    }
  }
  isActive: true
  idRef {
    id: "536d99fa366236081a002949"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Finished SF Mission"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_MissionState_SF"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Convince the San Francisco Megacorps to Help You"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536daaca366236081a002f52"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Finished Colma Mission"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_MissionState_Colma"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Recruit Norton\'s Army from Colma"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536daafd366236081a002f53"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Finished Dam Mission"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_MissionState_Dam"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Investigate the Native Californians at Shasta Dam"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536daaff366236081a002f54"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Finished I-5 Mission"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_MissionState_Five"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Secure Your Supply Lines on Interstate 5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536dab00366236081a002f55"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Pending I-5 Mission"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_MissionState_Five"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Secure Your Supply Lines on Interstate 5"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536dab33366236081a002f56"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Pending Colma Mission"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_MissionState_Colma"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Recruit Norton\'s Army from Colma"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536dab49366236081a002f57"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Pending SF Mission"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_MissionState_SF"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Convince the San Francisco Megacorps to Help You"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536dab4a366236081a002f58"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Pending  Dam Mission"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_MissionState_Dam"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Investigate the Native Californians at Shasta Dam"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536dab4c366236081a002f59"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Conversation ends"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor In Passive Mode"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "isWanderer"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "talkingToDorbi"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536daf97366236081a003124"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Stop Wandering When I\'m Talking To You"
  events {
    ops {
      functionName: "On Actor Clicked"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Actor In Passive Mode"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536db00a366236081a003125"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Init Merchants"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "OR"
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "531d26a736623648180018bf"
              }
              args {
                string_value: "Global_Supplies"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 3
              }
            }
          }
          args {
            int_value: 5
          }
        }
      }
      args {
        call_value {
          functionName: "Comparison (int)"
          args {
            call_value {
              functionName: "Get Story Variable (int)"
              args {
                string_value: "531d26a736623648180018bf"
              }
              args {
                string_value: "Global_numMissionsCompleted"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "Comparison Ops"
              }
              args {
                int_value: 2
              }
            }
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMerchantLevel2"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "536e8c8336623684180063cd"
  }
  elseActions {
    ops {
      functionName: "Activate Actor Spawner By Tag"
      args {
        call_value {
          functionName: "Get Map Item (SenseTagList)"
          args {
            string_value: "isMerchantLevel1"
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Set Difficulty"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_numMissionsCompleted"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "CharacterScaleAmount"
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  isActive: true
  idRef {
    id: "536e93e736623684180063d0"
  }
  elseActions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "CharacterScaleAmount"
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "Clear old quest items"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "a3-scrapyard-pickled_fetus_tray"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "a3-scrapyard-slug_parfait"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "a3-scrapyard-top_lifter_piece"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "a3-scrapyard-used_tissues"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "a3-native_californian_key"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "a3-redding_office_key"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "537557686434316b13333712"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Get Third AP"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_numMissionsCompleted"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Add Actor AP"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "537d252a643431531bbde93d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Acquire Pending Nuyen"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Redding_PendingNuyen"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Redding_PendingNuyen"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Redding_PendingNuyen"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5385f15e36623690190036a2"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Acquire Pending Karma"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Redding_PendingKarma"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  actions {
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Redding_PendingKarma"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Redding_PendingKarma"
          }
        }
      }
      args {
        int_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "5385f86f3662369019003740"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Final Supplies"
  events {
  }
  conditions {
    ops {
      functionName: "Invert Bool"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_SuppliedForFinalFight"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_SuppliedForFinalFight"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "HealthPack_med"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "HealthPack_med"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53863296643431570bac7e8c"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "538562e63662366411001508"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 2"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Grenade 3 (Flash)"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Grenade 3 (Flash)"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53863304643431570bac7e8d"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53863296643431570bac7e8c"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 3"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "DocWagonGold"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "DocWagonGold"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53863306643431570bac7e8e"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53863304643431570bac7e8d"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 4"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 3
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Bound Earth Spirit 3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Bound Air Spirit 3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53863308643431570bac7e8f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53863306643431570bac7e8e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 5"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 4
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Dog_Treat_Health"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Dog_Treat_Health"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Dog_Treat_Power"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Dog_Treat_Power"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53863309643431570bac7e90"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53863308643431570bac7e8f"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 6"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 5
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "HealthPack_hi"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "HealthPack_hi"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5386330b643431570bac7e91"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53863309643431570bac7e90"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 7"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 6
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Grenade 3 (Frag)"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Grenade 3 (Frag)"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5386330d643431570bac7e92"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5386330b643431570bac7e91"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 8"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 7
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "DocWagonPlatinum"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "DocWagonPlatinum"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "5386330e643431570bac7e93"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5386330d643431570bac7e92"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 9"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 8
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Bound Nature Spirit 4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Bound Water Spirit 4"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Trigger: Run Alternate Trigger"
      args {
        call_value {
          functionName: "Get Map Item (Trigger)"
          args {
            string_value: "53863310643431570bac7e94"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WaitOrNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5386330e643431570bac7e93"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "Receive Supplies Level 10"
  events {
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "531d26a736623648180018bf"
          }
          args {
            string_value: "Global_Supplies"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        int_value: 9
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "HealthPack_hi"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Stash"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "HealthPack_hi"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "53863310643431570bac7e94"
  }
  elseActions {
  }
  is_oneshot: true
}
regions {
  name: "Camera"
  position {
    x: -84
    y: -9
    width: 63
    height: 30
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "5366ff88366236240900846b"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "Hear Explosion"
  position {
    x: -83
    y: -8
    width: 13
    height: 14
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "536d9131366236081a002947"
  }
  highlight_color {
    r: 0
    g: 0
    b: 0
    a: 1
  }
  visible_at_start: false
  is_teleporter_region: false
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: -26
    y: 0
    z: 6
  }
  orientation: ORIENTATION_N
  idRef {
    id: "5366dcb53662362409008469"
  }
  lod: 0
  character_instance {
    character_mod {
      archetypeName: "Player"
    }
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -79
    y: 0
    z: -6
  }
  orientation: ORIENTATION_N
  GeneralTags: "isDorbi"
  displayName: "Dorbi"
  idRef {
    id: "536b0cf7366236e0040077d2"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Invert Bool"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "talkedToDorbi"
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "536cf3b06434312f056396b6"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/DwarfFemale"
    character_sheet_id: "a3_crew_dorbi_Lv4"
    equipment_sheet_id: "a3_crew_dorbi_Lv4"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Dorbi"
    GeneralTags: "isDorbi"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    portrait {
      filename: "pc_dwarffemale_06"
    }
    description_bio: "A fiery young lady."
    portrait_code_override: "s4h4c11b0t0"
    karma: 4
    hiring_cost_override: 0
    id: "a3_crew_lv4_dorbi"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -68
    y: 0
    z: 1
  }
  orientation: ORIENTATION_S
  GeneralTags: "isLazarus"
  GeneralTags: "isDog"
  GeneralTags: "isWanderer"
  displayName: "Lazarus"
  idRef {
    id: "536b0d3a366236e0040077d3"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Creatures/CreatureDogAngry"
    character_sheet_id: "a3_crew_lazarus_Lv1"
    equipment_sheet_id: "a3_crew_lazarus_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
        fire: VulnerabilityLevel_Default
      }
    }
    team_id: "Civilians"
    char_name: "Lazarus"
    GeneralTags: "isLazarus"
    GeneralTags: "isDog"
    GeneralTags: "isWanderer"
    enabled_at_start: true
    pc_spawn_number: -1
    unkillable: true
    hiring_type: HiringType_Hireable
    disable_pickups: true
    portrait {
      filename: "NPC_Dog_DanteCombat"
    }
    description_bio: "Norton\'s dog has faced lethal situations innumerable times, and somehow keeps on coming back for more."
    karma: 1
    hiring_cost_override: 0
    has_fist: false
    id: "a3_crew_lazarus_lv1"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -42
    y: 0
    z: 11
  }
  orientation: ORIENTATION_W
  GeneralTags: "isBummer"
  GeneralTags: "isDog"
  GeneralTags: "isWanderer"
  displayName: "Bummer"
  idRef {
    id: "536b0d3a366236e0040077d4"
  }
  lod: 0
  character_instance {
    prefab_name: "Berlin:Creatures/CreatureDogFriendly"
    character_sheet_id: "a3_crew_bummer_Lv2"
    equipment_sheet_id: "a3_crew_bummer_Lv2"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Bummer"
    GeneralTags: "isBummer"
    GeneralTags: "isDog"
    GeneralTags: "isWanderer"
    enabled_at_start: true
    pc_spawn_number: -1
    unkillable: true
    hiring_type: HiringType_Hireable
    disable_pickups: true
    portrait {
      filename: "npc_dog_dante"
    }
    description_bio: "An Emperor\'s best friend, Bummer is loyal, brave, and very protective of his master."
    karma: 2
    hiring_cost_override: 0
    has_fist: false
    id: "a3_crew_bummer_lv2"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -55
    y: 0
    z: 7
  }
  orientation: ORIENTATION_E
  GeneralTags: "isNorton"
  displayName: "Norton"
  idRef {
    id: "536b0d3a366236e0040077d5"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Invert Bool"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "talkedToNorton"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "531d26a736623648180018bf"
                }
                args {
                  string_value: "Global_MissionState_Colma"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "536ced526434312f0563962e"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanMale"
    character_sheet_id: "a3_crew_norton_Lv3"
    equipment_sheet_id: "a3_crew_norton_Lv3"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Hunt And Destroy"
      attitude: AttitudeBoss
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Emperor Norton"
    GeneralTags: "isNorton"
    pc_spawn_number: -1
    unkillable: true
    hiring_type: HiringType_Hireable
    portrait {
      filename: "EmperorNorton"
    }
    description_bio: "Emperor of UCAS and Protector of Aztlan."
    portrait_code_override: "s5h5c6b1c6"
    karma: 80
    hiring_cost_override: 0
    id: "a3_crew_lv3_norton"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -58
    y: 0
    z: -23
  }
  orientation: ORIENTATION_S
  displayName: "Ike Dunner"
  idRef {
    id: "536b159a366236e0040077dc"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "5227e3da366236a01800680e"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
    }
    equipment {
      prefab_name: "Outfit_Corporate Salaryman"
    }
    team_id: "Civilians"
    char_name: "Mr. Johnson"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    portrait {
      filename: "backer_elfmale_rthomasallwin"
    }
    portrait_code_override: "s5h2c2"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -56
    y: 0
    z: -25
  }
  orientation: ORIENTATION_E
  displayName: "Kali"
  idRef {
    id: "536b159a366236e0040077dd"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "5227dbe6366236a0180066d7"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        awareness: 24
        protect_tether_range: 5
        move_speed: 42
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
    }
    equipment {
      prefab_name: "AdeptCombatvest"
    }
    team_id: "Civilians"
    char_name: "Kali"
    pc_spawn_number: -1
    ai_ignores: true
    uninjurable: true
    unkillable: true
    portrait {
      filename: "pc_humanfemale_04c_whitebob"
    }
    portrait_code_override: "s6h5c14"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -64
    y: 0
    z: 13
  }
  orientation: ORIENTATION_N
  GeneralTags: "isHailey"
  displayName: "Hailey"
  idRef {
    id: "536b159a366236e0040077df"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Invert Bool"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "talkedToHailey"
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "536c17df643431b502b6ac30"
      turnToFace: false
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/HumanFemale"
    character_sheet_id: "a3_crew_hailey_Lv3"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "DeckerFab"
    }
    team_id: "Civilians"
    char_name: "Hailey"
    GeneralTags: "isHailey"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    cyberware_eyes: "Berlin_Laser Designator"
    cyberware_jack: "Datajack"
    cyberware_left_arm: "Obvious Cyberarm"
    portrait {
      filename: "backer_humanfemale_grahamwilliams_tsilonsiereht"
    }
    portrait_code_override: "s6h1c11"
    karma: 4
    hiring_cost_override: 0
    id: "a3_crew_hailey_lv4"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: 6
  }
  orientation: ORIENTATION_S
  GeneralTags: "isElorn"
  GeneralTags: "isWanderer"
  displayName: "Elorn"
  idRef {
    id: "536c40ed366236d41e0026a7"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Invert Bool"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "talkedToElorn"
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "536cfa7b6434312f056397bd"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Gangers/ElfMaleGangerDreads"
    character_sheet_id: "a3_crew_elorn_Lv4"
    equipment_sheet_id: "a3_crew_elorn_Lv4"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Elorn"
    GeneralTags: "isElorn"
    GeneralTags: "isWanderer"
    pc_spawn_number: -1
    hiring_type: HiringType_Hireable
    portrait {
      filename: "pc_elfmale_06_dreads"
    }
    description_bio: "Redding\'s own native son."
    portrait_code_override: "s1h1c4b0t0"
    karma: 4
    hiring_cost_override: 0
    id: "a3_crew_elorn_lv4"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -77
    y: 0
    z: -8
  }
  orientation: ORIENTATION_E
  GeneralTags: "isMerchantLevel1"
  displayName: "Hrafna Low"
  idRef {
    id: "536c4409366236d41e0026a8"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "536c1411643431b502b6aad0"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkFemale"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    equipment_sheet_id: "Merchant_Magic_Mid"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "ShamanSkirted"
    }
    team_id: "Civilians"
    char_name: "Hrafna"
    GeneralTags: "isMerchantLevel1"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "pc_orkfemale_06a"
    }
    portrait_code_override: "s2h7c6b0t0"
    karma: 177
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -56
    y: 0
    z: -4
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMerchantLevel1"
  displayName: "Amelia Low"
  idRef {
    id: "536c4ab7366236d41e0026ab"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "536c08a3643431b502b6a8ed"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/WeaponsDealer"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Merchant_Weapons_Mid"
    equipment_sheet_id: "Merchant_Outfit_Med"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Amelia"
    GeneralTags: "isMerchantLevel1"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "npc_humanfemale_weaponstechdealer"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -58
    y: 0
    z: -25
  }
  orientation: ORIENTATION_W
  displayName: "The Dave"
  idRef {
    id: "536c4ab7366236d41e0026ac"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "522518733662369c1a001b45"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Core/TrollMale"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Merchant_Tech_Mid"
    equipment_sheet_id: "Merchant_Doctor_Mid"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        awareness: 24
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
    }
    equipment {
      prefab_name: "RiggerTrenchcoat"
    }
    team_id: "Civilians"
    char_name: "The Dave"
    pc_spawn_number: -1
    portrait {
      filename: "backer_trollmale_chriskluwe_sympathyplan"
    }
    portrait_code_override: "s6h4c6b5h10"
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -41
    y: 0
    z: -2
  }
  orientation: ORIENTATION_S
  GeneralTags: "isWanderer"
  displayName: "Tomas"
  idRef {
    id: "536c4e8c366236d41e00278f"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Invert Bool"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "talkedToTomas"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "531d26a736623648180018bf"
                }
                args {
                  string_value: "Global_SideMissionState_Mercenaries"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "536d071a6434312f05639935"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollMale"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "SamuraiMilitary"
    }
    team_id: "Civilians"
    char_name: "Tomas"
    GeneralTags: "isWanderer"
    pc_spawn_number: -1
    portrait {
      filename: "backerpc_trollmale_isaacnagel_bryanlitelightner"
    }
    portrait_code_override: "s6h0c6b0t13"
    karma: 177
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -60
    y: 0
    z: -2
  }
  orientation: ORIENTATION_S
  displayName: "Selene"
  idRef {
    id: "536c5182366236d41e002790"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "OR"
        args {
          call_value {
            functionName: "Invert Bool"
            args {
              call_value {
                functionName: "Get Variable (bool)"
                args {
                  string_value: "talkedToSelene"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Comparison (int)"
            args {
              call_value {
                functionName: "Get Story Variable (int)"
                args {
                  string_value: "531d26a736623648180018bf"
                }
                args {
                  string_value: "Global_MissionState_Five"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "Comparison Ops"
                }
                args {
                  int_value: 0
                }
              }
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "536cfd8a6434312f05639838"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/ElfFemale"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "ShamanUrban"
    }
    team_id: "Civilians"
    char_name: "Selene"
    pc_spawn_number: -1
    portrait {
      filename: "pc_elffemale_02a_samurai"
    }
    portrait_code_override: "s4h2c3"
    karma: 177
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -57
    y: 0
    z: -25
  }
  orientation: ORIENTATION_S
  displayName: "Terminal"
  idRef {
    id: "536c5f88366236d41e0027f2"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/TrollMale"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Terminal"
    pc_spawn_number: -1
    portrait {
      filename: "generic_esp_kamikaze"
    }
    karma: 177
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -58
    y: 0
    z: -24
  }
  orientation: ORIENTATION_S
  displayName: "People\'s University"
  idRef {
    id: "536c5ffd366236d41e0027f3"
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Objects/InvisibleActor"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "TH3 P30PL3\'$ UN1V3R$1TY"
    pc_spawn_number: -1
    portrait {
      filename: "pc_orkmale_00b"
    }
    karma: 177
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -83
    y: 0
    z: -3
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMerchantLevel1"
  displayName: "Horatio Low"
  idRef {
    id: "536d8ed8366236081a0026aa"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "536c0c69643431b502b6a9bb"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/DwarfMaleHomelessBeard"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Merchant_Doctor_Mid"
    equipment_sheet_id: "Merchant_Tech_Mid"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Horatio"
    GeneralTags: "isMerchantLevel1"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "pc_dwarfmale_02a_beardie"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -56
    y: 0
    z: -6
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMerchantLevel2"
  displayName: "Amelia High"
  idRef {
    id: "536e8bf336623684180063cc"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "536c08a3643431b502b6a8ed"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Story/WeaponsDealer"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Merchant_Outfit_High"
    equipment_sheet_id: "Merchant_Weapons_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Amelia"
    GeneralTags: "isMerchantLevel2"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "npc_humanfemale_weaponstechdealer"
    }
    karma: 6
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -74
    y: 0
    z: -8
  }
  orientation: ORIENTATION_E
  GeneralTags: "isMerchantLevel2"
  displayName: "Hrafna High"
  idRef {
    id: "536e8ce836623684180063ce"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "536c1411643431b502b6aad0"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Core/OrkFemale"
    character_sheet_id: "AGChemie_Cyberzombie_Lv1"
    equipment_sheet_id: "Merchant_Magic_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        armor: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        dodge: 0
      }
      specializations {
        rifle: 0
        edged: 0
        unarmed: 0
      }
      vulnerabilities {
      }
    }
    equipment {
      prefab_name: "ShamanSkirted"
    }
    team_id: "Civilians"
    char_name: "Hrafna"
    GeneralTags: "isMerchantLevel2"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "pc_orkfemale_06a"
    }
    portrait_code_override: "s2h7c6b0t0"
    karma: 177
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -83
    y: 0
    z: 4
  }
  orientation: ORIENTATION_S
  GeneralTags: "isMerchantLevel2"
  displayName: "Horatio High"
  idRef {
    id: "536e8d4036623684180063cf"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    conversationPoint {
      conversationID: "536c0c69643431b502b6a9bb"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Seattle:Homeless/DwarfMaleHomelessBeard"
    character_sheet_id: "BaseCivilian"
    equipment_sheet_id: "Merchant_Tech_High"
    equipment_sheet_id: "Merchant_Doctor_High"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        hp: 0
        ap: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: 0
        authority: 0
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Non-Combatant"
      vulnerabilities {
      }
    }
    team_id: "Civilians"
    char_name: "Horatio"
    GeneralTags: "isMerchantLevel2"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: "pc_dwarfmale_02a_beardie"
    }
    karma: 6
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "talkedToKali"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "dorbiMentionedPractice"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "dorbiGangFollowUps"
    typeName: "int"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "seleneCheckedStatus"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "tomasCheckedStatus"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "talkedToNorton"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "talkedToDorbi"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "talkedToHailey"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "talkedToSelene"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "talkedToTomas"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "talkedToElorn"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "talkingToDorbi"
    typeName: "bool"
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "sawAmeliaGear"
    typeName: "bool"
  }
}
mapEvents: "Barrel Explode Loop"
goals {
  name: "Convince the San Francisco Megacorps to Help You"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Recruit Norton\'s Army from Colma"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Secure Your Supply Lines on Interstate 5"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Investigate the Native Californians at Shasta Dam"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "Redding Old City Hall"
parentStory: ""
scene_title: "Redding"
scene_subtitle: ""
scene_synopsis: "$(story.Redding_Synopsis)"
scene_image: ""
scene_continue_button_skip: false
scene_restore_runner_health: true
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: false
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
scene_dimensions {
  dimension_name: "Matrix"
  initial_alarm_state: 20
  turns_per_round: 3
}
character_roster {
}
show_hiring_screen_on_scene_load: false
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 0
hiring_minimum_karma: 0
hiring_maximum_karma: 0
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 99999
override_hiring_average_cost: true
show_equip_screen_on_scene_load: false
can_move_outside_camera_regions: false
can_start_before_triggers: false
